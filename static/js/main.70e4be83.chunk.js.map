{"version":3,"sources":["Elections.jsx","Authorization.jsx","App.js","index.js","config.js"],"names":["Elections","contract","useState","isLoading","useEffect","className","Authorization","currentUser","nearConfig","wallet","isShowing","setIsShowing","useTimeoutFn","resetIsShowing","as","Fragment","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","src","alt","onClick","signOut","window","location","replace","origin","pathname","requestSignIn","contractName","accountId","App","a","getConfig","process","nearAPI","deps","keyStore","BrowserLocalStorageKeyStore","near","walletConnection","getAccountId","account","state","amount","balance","viewMethods","changeMethods","sender","nearInitPromise","initContract","then","ReactDOM","render","document","getElementById","CONTRACT_NAME","module","exports","env","networkId","nodeUrl","walletUrl","helperUrl","Error"],"mappings":"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","file":"static/js/main.70e4be83.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport ErrorPopup from \"./ErrorPopup\";\n\nconst Elections = ({ contract }) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {});\n\n  return (\n    <div className=\"md:container md:mx-auto\">\n      {isLoading ? (\n        <div className=\"mt-4 mx-auto loader ease-linear rounded-full border-4 border-t-4 border-gray-200 h-20 w-20\"></div>\n      ) : (\n        <div className=\"mt-4 h-20 w-20\"></div>\n      )}\n    </div>\n  );\n};\n\nexport default Elections;\n","import { Fragment, useState, useEffect } from \"react\";\nimport { useTimeoutFn } from \"react-use\";\nimport { Transition } from \"@headlessui/react\";\n\nconst Authorization = ({ currentUser, nearConfig, wallet }) => {\n  const signIn = () => {\n    wallet.requestSignIn(nearConfig.contractName, \"NEAR Yatzi App\");\n  };\n\n  const signOut = () => {\n    wallet.signOut();\n    window.location.replace(window.location.origin + window.location.pathname);\n  };\n\n  let [isShowing, setIsShowing] = useState(true);\n  let [, , resetIsShowing] = useTimeoutFn(() => setIsShowing(true), 500);\n\n  useEffect(() => {\n    resetIsShowing();\n  }, [resetIsShowing]);\n  return (\n    <>\n      <Transition\n        as={Fragment}\n        show={isShowing}\n        enter=\"transform transition duration-[400ms]\"\n        enterFrom=\"opacity-0 rotate-[-120deg] scale-50\"\n        enterTo=\"opacity-100 rotate-0 scale-100\"\n        leave=\"transform duration-200 transition ease-in-out\"\n        leaveFrom=\"opacity-100 rotate-0 scale-100 \"\n        leaveTo=\"opacity-0 scale-95 \"\n      >\n        <div className=\"mt-6 p-6 max-w-sm mx-auto bg-white rounded-xl shadow-md flex items-center space-x-4\">\n          <div className=\"flex-shrink-0\">\n            <img\n              className=\"h-14 w-20\"\n              src=\"https://docs.near.org/img/near_logo.svg\"\n              alt=\"NEAR Logo\"\n            />\n            {currentUser ? (\n              <button\n                className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n                onClick={signOut}\n              >\n                Log out\n              </button>\n            ) : (\n              <button\n                className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n                onClick={signIn}\n              >\n                Log in\n              </button>\n            )}\n          </div>\n          <div>\n            <div className=\"text-xl font-medium text-black\">Governance</div>\n            {currentUser ? (\n              <div>\n                <p className=\"text-gray-500\">\n                  Account ID: {currentUser.accountId}{\" \"}\n                </p>\n              </div>\n            ) : (\n              <div>\n                <p className=\"text-gray-500\">Sign in to participate</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </Transition>\n    </>\n  );\n};\n\nexport default Authorization;\n","import \"regenerator-runtime/runtime\";\nimport React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Elections from \"./Elections\";\nimport Authorization from \"./Authorization\";\n\nconst App = ({ contract, currentUser, nearConfig, wallet }) => {\n  return (\n    <>\n      <Authorization\n        currentUser={currentUser}\n        nearConfig={nearConfig}\n        wallet={wallet}\n      />\n      {currentUser && <Elections contract={contract} />}\n    </>\n  );\n};\n\nApp.propTypes = {\n  contract: PropTypes.shape({\n    current_points: PropTypes.func.isRequired,\n    current_turn: PropTypes.func.isRequired,\n    start_round: PropTypes.func.isRequired,\n    end_round: PropTypes.func.isRequired,\n    reset_game: PropTypes.func.isRequired,\n  }).isRequired,\n  currentUser: PropTypes.shape({\n    accountId: PropTypes.string.isRequired,\n    balance: PropTypes.string.isRequired,\n  }),\n  nearConfig: PropTypes.shape({\n    contractName: PropTypes.string.isRequired,\n  }).isRequired,\n  wallet: PropTypes.shape({\n    requestSignIn: PropTypes.func.isRequired,\n    signOut: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default App;\n","// src/index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport getConfig from \"./config.js\";\nimport * as nearAPI from \"near-api-js\";\n\n// Initializing contract\nasync function initContract() {\n    const nearConfig = getConfig(process.env.NODE_ENV || \"testnet\");\n\n    // Initializing connection to the NEAR TestNet\n    const near = await nearAPI.connect({\n        deps: {\n            keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore(),\n        },\n        ...nearConfig,\n    });\n\n    // Needed to access wallet\n    const walletConnection = new nearAPI.WalletConnection(near);\n\n    // Load in account data\n    let currentUser;\n    if (walletConnection.getAccountId()) {\n        currentUser = {\n            accountId: walletConnection.getAccountId(),\n            balance: (await walletConnection.account().state()).amount,\n        };\n    }\n\n    // Initializing our contract APIs by contract name and configuration\n    const contract = await new nearAPI.Contract(\n        walletConnection.account(),\n        nearConfig.contractName, {\n            // View methods are read-only â€“ they don't modify the state, but usually return some value\n            viewMethods: [\"current_points\", \"current_turn\", \"how_to_play\"],\n            // Change methods can modify the state, but you don't receive the returned value when called\n            changeMethods: [\"reset_game\", \"end_round\", \"start_round\"],\n            // Sender is the account ID to initialize transactions.\n            // getAccountId() will return empty string if user is still unauthorized\n            sender: walletConnection.getAccountId(),\n        }\n    );\n\n    return { contract, currentUser, nearConfig, walletConnection };\n}\n\nwindow.nearInitPromise = initContract().then(\n    ({ contract, currentUser, nearConfig, walletConnection }) => {\n        ReactDOM.render( <\n            App contract = { contract }\n            currentUser = { currentUser }\n            nearConfig = { nearConfig }\n            wallet = { walletConnection }\n            />,\n            document.getElementById(\"root\")\n        );\n    }\n);","const CONTRACT_NAME =\n    process.env.CONTRACT_NAME || \"dev-1635864300419-12038531642498\";\n\nfunction getConfig(env) {\n    switch (env) {\n        case \"mainnet\":\n            return {\n                networkId: \"mainnet\",\n                nodeUrl: \"https://rpc.mainnet.near.org\",\n                contractName: CONTRACT_NAME,\n                walletUrl: \"https://wallet.near.org\",\n                helperUrl: \"https://helper.mainnet.near.org\",\n            };\n            // This is an example app so production is set to testnet.\n            // You can move production to mainnet if that is applicable.\n        case \"production\":\n        case \"development\":\n        case \"testnet\":\n            return {\n                networkId: \"testnet\",\n                nodeUrl: \"https://rpc.testnet.near.org\",\n                contractName: CONTRACT_NAME,\n                walletUrl: \"https://wallet.testnet.near.org\",\n                helperUrl: \"https://helper.testnet.near.org\",\n            };\n        default:\n            throw Error(\n                `Unconfigured environment '${env}'. Can be configured in src/config.js.`\n            );\n    }\n}\n\nmodule.exports = getConfig;"],"sourceRoot":""}