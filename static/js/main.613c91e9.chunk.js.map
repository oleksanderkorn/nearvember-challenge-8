{"version":3,"sources":["LoadingIndicator.jsx","ElectionCard.jsx","CandidateCards.jsx","CandidateDialog.jsx","ElectionDetails.jsx","Elections.jsx","Authorization.jsx","App.js","index.js","config.js"],"names":["LoadingIndicator","isLoading","className","ElectionCard","election","index","delay","onElectionSelected","contract","currentUser","nearConfig","wallet","useState","isShowing","setIsShowing","creationDate","toDate","startDate","endDate","useTimeoutFn","resetIsShowing","useEffect","as","Fragment","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","onClick","title","description","formatDate","plans","name","ram","cpus","disk","CheckIcon","props","viewBox","fill","cx","cy","r","opacity","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","CandidateCard","candidates","selected","setSelected","value","onChange","Label","map","candidate","Option","active","checked","xmlns","accountId","Description","fillRule","clipRule","slogan","goals","CandidateDialog","onClose","onCandidateAdded","candidateName","setCandidateName","candidateSlogan","setCandidateSlogan","candidateGoals","setCandidateGoals","appear","Child","Overlay","aria-hidden","Title","label","onValueChange","e","target","lines","type","add_candidacy","electionId","id","then","err","console","log","TextField","htmlFor","rows","ElectionDetails","closeButtonColor","setCloseButtonColor","setCandidates","shouldReloadCandidates","setShouldReloadCandidates","showCandidateDialog","setShowCandidateDialog","isGodMode","setIsGodeMode","get_god_mode","mode","get_candidates","disabled","moment","onMouseEnter","onMouseLeave","length","CandidateCards","date","format","timestamp","Math","floor","toFixed","Elections","setIsLoading","elections","setElections","selectedElection","setSelectedElection","activateElection","localStorage","setItem","getItem","filter","forEach","get_elections","removeItem","GodModeToggle","enabled","setEnabled","isEnabled","god_mode_on","god_mode_off","Authorization","src","alt","signOut","window","location","replace","origin","pathname","requestSignIn","contractName","App","a","getConfig","process","nearAPI","deps","keyStore","BrowserLocalStorageKeyStore","near","walletConnection","getAccountId","account","state","amount","balance","viewMethods","changeMethods","sender","nearInitPromise","initContract","ReactDOM","render","document","getElementById","CONTRACT_NAME","module","exports","env","networkId","nodeUrl","walletUrl","helperUrl","Error"],"mappings":"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","file":"static/js/main.613c91e9.chunk.js","sourcesContent":["const LoadingIndicator = ({ isLoading }) => {\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"mt-4 mx-auto loader ease-linear rounded-full border-4 border-t-4 border-gray-200 h-12 w-12\"></div>\n      ) : (\n        <div className=\"mt-4 h-12 w-12\"></div>\n      )}\n    </>\n  );\n};\n\nexport default LoadingIndicator;\n","import { Fragment, useEffect, useState } from \"react\";\nimport { Transition } from \"@headlessui/react\";\nimport { useTimeoutFn } from \"react-use\";\nimport { formatDate, toDate } from \"./Elections\";\n\nconst ElectionCard = ({\n  election,\n  index,\n  delay,\n  contract,\n  currentUser,\n  nearConfig,\n  wallet,\n  onElectionSelected,\n}) => {\n  let [isShowing, setIsShowing] = useState(false);\n\n  const creationDate = toDate(election.creationDate);\n  const startDate = toDate(election.startDate);\n  const endDate = toDate(election.endDate);\n\n  let [, , resetIsShowing] = useTimeoutFn(\n    () => setIsShowing(true),\n    index * 200\n  );\n\n  useEffect(() => {\n    resetIsShowing();\n  }, [resetIsShowing]);\n\n  return (\n    <Transition\n      as={Fragment}\n      show={isShowing}\n      enter={`transform transition duration-[${delay}ms]`}\n      enterFrom=\"opacity-0 rotate-[-120deg] scale-50\"\n      enterTo=\"opacity-100 rotate-0 scale-100\"\n      leave=\"transform duration-200 transition ease-in-out\"\n      leaveFrom=\"opacity-100 rotate-0 scale-100 \"\n      leaveTo=\"opacity-0 scale-95 \"\n    >\n      <div\n        onClick={() => onElectionSelected(election)}\n        className=\"w-400 bg-gradient-to-r from-yellow-400 to-red-500 p-6 max-w-sm mx-auto rounded-xl flex-col shadow-md flex items-center space-x-4 cursor-pointer\"\n      >\n        <div className=\"text-xl font-medium text-black\">{election.title}</div>\n        <div className=\"text-xl font-medium text-black\">\n          {election.description}\n        </div>\n\n        <div className=\"text-md font-medium text-black text\">\n          Created at: {formatDate(creationDate)}\n        </div>\n        <div className=\"text-md font-medium text-black text\">\n          {formatDate(startDate)} - {formatDate(endDate)}\n        </div>\n      </div>\n    </Transition>\n  );\n};\n\nexport default ElectionCard;\n","import { useState } from \"react\";\nimport { RadioGroup } from \"@headlessui/react\";\n\nconst plans = [\n  {\n    name: \"Startup\",\n    ram: \"12GB\",\n    cpus: \"6 CPUs\",\n    disk: \"160 GB SSD disk\",\n  },\n  {\n    name: \"Business\",\n    ram: \"16GB\",\n    cpus: \"8 CPUs\",\n    disk: \"512 GB SSD disk\",\n  },\n  {\n    name: \"Enterprise\",\n    ram: \"32GB\",\n    cpus: \"12 CPUs\",\n    disk: \"1024 GB SSD disk\",\n  },\n];\n\nconst CandidateCard = ({\n  election,\n  candidates,\n  contract,\n  currentUser,\n  nearConfig,\n  wallet,\n}) => {\n  const [selected, setSelected] = useState(plans[0]);\n\n  return (\n    <>\n      <div className=\"w-full\">\n        <RadioGroup value={selected} onChange={setSelected}>\n          <RadioGroup.Label className=\"sr-only\">Server size</RadioGroup.Label>\n          <div className=\"flex flex-col justify-between\">\n            {candidates.map((candidate, index) => (\n              <RadioGroup.Option\n                key={index}\n                value={candidate.name}\n                className={({ active, checked }) =>\n                  `${\n                    active\n                      ? \"ring-2 ring-offset-2 ring-offset-sky-300 ring-white ring-opacity-60\"\n                      : \"\"\n                  }\n                      ${\n                        checked\n                          ? \"bg-sky-900 bg-opacity-75 text-white bg-green-500\"\n                          : \"bg-white\"\n                      }\n                      w-full min-w-10 relative rounded-lg shadow-md px-5 py-4 cursor-pointer flex focus:outline-none m-2`\n                }\n              >\n                {({ active, checked }) => (\n                  <>\n                    <div className=\"flex items-center justify-between w-full\">\n                      <div className=\"flex items-center\">\n                        <div className=\"text-sm\">\n                          <RadioGroup.Label\n                            as=\"div\"\n                            className={`font-medium flex align-center ${\n                              checked ? \"text-white\" : \"text-gray-900\"\n                            }`}\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              className=\"h-6 w-6 mr-2 flex-none\"\n                              fill=\"none\"\n                              viewBox=\"0 0 24 24\"\n                              stroke=\"currentColor\"\n                            >\n                              <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth={2}\n                                d=\"M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207\"\n                              />\n                            </svg>\n                            <p className=\"flex-grow\">{candidate.accountId}</p>\n                          </RadioGroup.Label>\n                          <RadioGroup.Description\n                            as=\"span\"\n                            className={`inline mx-2${\n                              checked\n                                ? \"text-sky-100 bg-green-400\"\n                                : \"text-gray-500\"\n                            }`}\n                          >\n                            <div className=\"flex\">\n                              <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-6 w-6 mr-2 flex-none\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                              >\n                                <path\n                                  strokeLinecap=\"round\"\n                                  strokeLinejoin=\"round\"\n                                  strokeWidth={2}\n                                  d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                                />\n                              </svg>\n                              <p className=\"flex-grow\">{candidate.name}</p>\n                            </div>\n                            <div className=\"flex\">\n                              <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"flex-none mr-2 h-6 w-6 \"\n                                viewBox=\"0 0 20 20\"\n                                fill=\"currentColor\"\n                              >\n                                <path\n                                  fillRule=\"evenodd\"\n                                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n                                  clipRule=\"evenodd\"\n                                />\n                              </svg>\n                              <p className=\"flex-grow\">{candidate.slogan}</p>\n                            </div>\n                            <div className=\"flex\">\n                              <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"flex-none mr-2 h-6 w-6\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                              >\n                                <path\n                                  strokeLinecap=\"round\"\n                                  strokeLinejoin=\"round\"\n                                  strokeWidth={2}\n                                  d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                                />\n                              </svg>\n                              <p className=\"flex-grow\">{candidate.goals}</p>\n                            </div>\n                          </RadioGroup.Description>\n                        </div>\n                      </div>\n                      {checked && (\n                        <div className=\"flex-shrink-0 text-white\">\n                          <CheckIcon className=\"w-6 h-6\" />\n                        </div>\n                      )}\n                    </div>\n                  </>\n                )}\n              </RadioGroup.Option>\n            ))}\n          </div>\n        </RadioGroup>\n      </div>\n    </>\n  );\n};\n\nfunction CheckIcon(props) {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <circle cx={12} cy={12} r={12} fill=\"#fff\" opacity=\"0.2\" />\n      <path\n        d=\"M7 13l3 3 7-7\"\n        stroke=\"#fff\"\n        strokeWidth={1.5}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n}\n\nexport default CandidateCard;\n","import { Dialog, Transition } from \"@headlessui/react\";\nimport { Fragment, useState } from \"react\";\n\nexport default function CandidateDialog({\n  onClose,\n  election,\n  contract,\n  currentUser,\n  nearConfig,\n  wallet,\n  onCandidateAdded,\n}) {\n  const [candidateName, setCandidateName] = useState(\"\");\n  const [candidateSlogan, setCandidateSlogan] = useState(\"\");\n  const [candidateGoals, setCandidateGoals] = useState(\"My goals\");\n  const addCandidacy = () => {\n    contract\n      .add_candidacy({\n        electionId: election.id,\n        name: candidateName,\n        slogan: candidateSlogan,\n        goals: candidateGoals,\n      })\n      .then(\n        () => {\n          onCandidateAdded();\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n  };\n\n  return (\n    <>\n      <Transition appear show={true} as={Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"fixed inset-0 z-10 overflow-y-auto\"\n          onClose={onClose}\n        >\n          <div className=\"min-h-screen px-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Dialog.Overlay className=\"fixed inset-0\" />\n            </Transition.Child>\n\n            <span\n              className=\"inline-block h-screen align-middle\"\n              aria-hidden=\"true\"\n            >\n              &#8203;\n            </span>\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-2xl\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900\"\n                >\n                  Register as a cadidate\n                </Dialog.Title>\n                <TextField\n                  label=\"Name\"\n                  value={candidateName}\n                  onValueChange={(e) => setCandidateName(e.target.value)}\n                />\n                <TextField\n                  label=\"Slogan\"\n                  value={candidateSlogan}\n                  onValueChange={(e) => setCandidateSlogan(e.target.value)}\n                />\n                <TextField\n                  label=\"Goals\"\n                  value={candidateGoals}\n                  lines={4}\n                  onValueChange={(e) => setCandidateGoals(e.target.value)}\n                />\n                <div className=\"mt-4 flex justify-between\">\n                  <button\n                    type=\"button\"\n                    className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-red-100 border border-transparent rounded-md hover:bg-red-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n                    onClick={onClose}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n                    onClick={addCandidacy}\n                  >\n                    Submit\n                  </button>\n                </div>\n              </div>\n            </Transition.Child>\n          </div>\n        </Dialog>\n      </Transition>\n    </>\n  );\n}\n\nconst TextField = ({ label, value, lines, onValueChange }) => {\n  return (\n    <div>\n      <div className=\"flex flex-row mt-2 relative rounded-md\">\n        <label\n          htmlFor=\"price\"\n          className=\"block text-sm font-medium text-gray-700 mr-10 w-8\"\n        >\n          {label}\n        </label>\n        {lines ? (\n          <textarea\n            className=\"border-2 p-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-200 rounded-md\"\n            name={label}\n            id={label}\n            rows={lines}\n            onChange={onValueChange}\n          ></textarea>\n        ) : (\n          <input\n            type=\"text\"\n            name={label}\n            id={label}\n            className=\"border-2 p-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-200 rounded-md\"\n            value={value}\n            onChange={onValueChange}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { Fragment, useState, useEffect } from \"react\";\nimport { Dialog } from \"@headlessui/react\";\nimport { Transition } from \"@headlessui/react\";\nimport { formatDate, toDate } from \"./Elections\";\nimport CandidateCards from \"./CandidateCards\";\nimport CandidateDialog from \"./CandidateDialog\";\nimport { useTimeoutFn } from \"react-use\";\nimport moment from \"moment\";\n\nconst ElectionDetails = ({\n  election,\n  contract,\n  currentUser,\n  nearConfig,\n  wallet,\n  onClose,\n}) => {\n  const [isShowing, setIsShowing] = useState(false);\n  const [closeButtonColor, setCloseButtonColor] = useState(\"#000\");\n  const [candidates, setCandidates] = useState([]);\n  const [shouldReloadCandidates, setShouldReloadCandidates] = useState(false);\n  const [showCandidateDialog, setShowCandidateDialog] = useState(false);\n\n  const creationDate = toDate(election.creationDate);\n  const startDate = toDate(election.startDate);\n  const endDate = toDate(election.endDate);\n  let [, , resetIsShowing] = useTimeoutFn(() => setIsShowing(true), 100);\n\n  const [isGodMode, setIsGodeMode] = useState(false);\n\n  useEffect(() => {\n    if (currentUser) {\n      contract\n        .get_god_mode({ accountId: currentUser.accountId })\n        .then((mode) => {\n          setIsGodeMode(mode);\n        });\n    }\n  }, [isGodMode, contract, currentUser]);\n\n  useEffect(() => {\n    contract.get_candidates({ electionId: election.id }).then((candidates) => {\n      setCandidates(candidates);\n    });\n  }, [contract, election.id, shouldReloadCandidates]);\n\n  const canAddCandidacy = () => {\n    return isGodMode || startDate < moment();\n  };\n\n  useEffect(() => {\n    resetIsShowing();\n  }, [resetIsShowing]);\n\n  return (\n    <Transition\n      as={Fragment}\n      show={isShowing}\n      enter={`transform transition duration-[250ms]`}\n      enterFrom=\"opacity-0 rotate-[-120deg] scale-50\"\n      enterTo=\"opacity-100 rotate-0 scale-100\"\n      leave=\"transform duration-200 transition ease-in-out\"\n      leaveFrom=\"opacity-100 rotate-0 scale-100 \"\n      leaveTo=\"opacity-0 scale-95 \"\n    >\n      <div className=\"mw-800 bg-gradient-to-r from-indigo-300 to-indigo-500 p-6 rounded-xl flex-col shadow-md flex space-x-4\">\n        <div className=\"text-2xl flex justify-between font-medium items-center mb-4\">\n          <button\n            onClick={() => setShowCandidateDialog(true)}\n            disabled={!canAddCandidacy}\n            className=\"disabled:opacity-10 mt-2 bg-green-500 hover:bg-green-700 w-14 h-14 text-white font-bold py-2 px-4 rounded-xl float-right\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\"\n              />\n            </svg>\n          </button>\n          <div className=\"mt-2 text-2xl text-center font-medium text-black\">\n            {election.title}\n          </div>\n          <button\n            className=\"font-medium \"\n            onClick={onClose}\n            onMouseEnter={() => setCloseButtonColor(\"#ddd\")}\n            onMouseLeave={() => setCloseButtonColor(\"#000\")}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke={closeButtonColor}\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          </button>\n        </div>\n        <div className=\"text-xl font-medium text-black\">\n          {election.description}\n        </div>\n\n        <div className=\"text-md font-medium text-black text\">\n          Created at: {formatDate(creationDate)}\n        </div>\n        <div className=\"text-md font-medium text-black text\">\n          {formatDate(startDate)} - {formatDate(endDate)}\n        </div>\n        <div className=\"text-xl font-medium text-black\">\n          {candidates.length > 0\n            ? \"Candidates:\"\n            : \"No cadidates yes, apply to be the first\"}\n        </div>\n        {showCandidateDialog && (\n          <div className=\"backdrop-filter backdrop-blur-lg mx-auto w-80\">\n            <CandidateDialog\n              election={election}\n              contract={contract}\n              currentUser={currentUser}\n              nearConfig={nearConfig}\n              wallet={wallet}\n              onCandidateAdded={() => {\n                setShouldReloadCandidates(true);\n                setShowCandidateDialog(false);\n              }}\n              onClose={() => setShowCandidateDialog(false)}\n            />\n          </div>\n        )}\n        {candidates && (\n          <div>\n            <CandidateCards\n              election={election}\n              candidates={candidates}\n              contract={contract}\n              currentUser={currentUser}\n              nearConfig={nearConfig}\n              wallet={wallet}\n            />\n          </div>\n        )}\n      </div>\n    </Transition>\n  );\n};\n\nconst VoteDialog = () => {\n  let [isOpen, setIsOpen] = useState(true);\n  return (\n    <Dialog open={isOpen} onClose={() => setIsOpen(false)}>\n      <Dialog.Overlay />\n\n      <Dialog.Title>Deactivate account</Dialog.Title>\n      <Dialog.Description>\n        This will permanently deactivate your account\n      </Dialog.Description>\n\n      <p>\n        Are you sure you want to deactivate your account? All of your data will\n        be permanently removed. This action cannot be undone.\n      </p>\n\n      <button onClick={() => setIsOpen(false)}>Deactivate</button>\n      <button onClick={() => setIsOpen(false)}>Cancel</button>\n    </Dialog>\n  );\n};\n\nexport default ElectionDetails;\n","import { useEffect, useState } from \"react\";\nimport LoadingIndicator from \"./LoadingIndicator\";\nimport moment from \"moment\";\nimport ElectionCard from \"./ElectionCard\";\nimport ElectionDetails from \"./ElectionDetails\";\n\nexport const formatDate = (date) => {\n  return date.format(\"DD MMM yyyy HH:MM\");\n};\n\nexport const toDate = (date) => {\n  const timestamp = Math.floor(date / 1000000).toFixed();\n  return moment(timestamp, \"x\");\n};\n\nconst Elections = ({ contract, currentUser, nearConfig, wallet }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [elections, setElections] = useState();\n  const [selectedElection, setSelectedElection] = useState();\n\n  const activateElection = (election) => {\n    localStorage.setItem(\"activeElection\", election.id);\n    setSelectedElection(election);\n  };\n\n  const deactivateElection = () => {\n    localStorage.removeItem(\"activeElection\");\n    setSelectedElection(null);\n  };\n\n  useEffect(() => {\n    if (elections) {\n      const electionId = localStorage.getItem(\"activeElection\");\n      elections\n        .filter((e) => `${e.id}` === electionId)\n        .forEach((e) => {\n          setSelectedElection(e);\n        });\n    }\n  }, [elections]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    contract.get_elections().then(\n      (elections) => {\n        setIsLoading(false);\n        setElections(elections);\n      },\n      (err) => {\n        setIsLoading(false);\n      }\n    );\n  }, [contract]);\n\n  return (\n    <div className=\"container mx-auto flex-row\">\n      <LoadingIndicator isLoading={isLoading} />\n      {!selectedElection && (\n        <div className=\"grid lg:grid-cols-4 md:grid-cols-2 xs:grid-cols-1 gap-4\">\n          {elections &&\n            elections.map((election, index) => {\n              return (\n                <ElectionCard\n                  key={election.id}\n                  election={election}\n                  index={index}\n                  contract={contract}\n                  currentUser={currentUser}\n                  nearConfig={nearConfig}\n                  wallet={wallet}\n                  onElectionSelected={activateElection}\n                />\n              );\n            })}\n        </div>\n      )}\n      {selectedElection && (\n        <div className=\"grid grid-cols-1\">\n          <ElectionDetails\n            election={selectedElection}\n            contract={contract}\n            currentUser={currentUser}\n            nearConfig={nearConfig}\n            wallet={wallet}\n            onClose={deactivateElection}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Elections;\n","import { Fragment, useState, useEffect } from \"react\";\nimport { useTimeoutFn } from \"react-use\";\nimport { Transition } from \"@headlessui/react\";\nimport { Switch } from \"@headlessui/react\";\n\nconst GodModeToggle = ({ contract, currentUser, nearConfig, wallet }) => {\n  const [enabled, setEnabled] = useState(false);\n\n  useEffect(() => {\n    if (currentUser) {\n      contract\n        .get_god_mode({ accountId: currentUser.accountId })\n        .then((mode) => {\n          setEnabled(mode);\n        });\n    }\n  }, [enabled, contract, currentUser]);\n\n  const switchMode = (isEnabled) => {\n    if (isEnabled) {\n      contract.god_mode_on({}).then(() => {\n        setEnabled(true);\n      });\n    } else {\n      contract.god_mode_off({}).then(() => {\n        setEnabled(true);\n      });\n    }\n  };\n\n  return (\n    <div className=\"flex-row content-between\">\n      <span>God mode: </span>\n      <Switch\n        checked={enabled}\n        onChange={switchMode}\n        className={`${\n          enabled ? \"bg-blue-600\" : \"bg-gray-200\"\n        } relative inline-flex items-center h-6 rounded-full w-11`}\n      >\n        <span className=\"sr-only\">God mode</span>\n        <span\n          className={`${\n            enabled ? \"translate-x-6\" : \"translate-x-1\"\n          } inline-block w-4 h-4 transform bg-white rounded-full`}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nconst Authorization = ({ contract, currentUser, nearConfig, wallet }) => {\n  const signIn = () => {\n    wallet.requestSignIn(nearConfig.contractName, \"NEAR Voting App\");\n  };\n\n  const signOut = () => {\n    wallet.signOut();\n    window.location.replace(window.location.origin + window.location.pathname);\n  };\n\n  let [isShowing, setIsShowing] = useState(true);\n  let [, , resetIsShowing] = useTimeoutFn(() => setIsShowing(true), 500);\n\n  useEffect(() => {\n    resetIsShowing();\n  }, [resetIsShowing]);\n\n  return (\n    <>\n      <Transition\n        as={Fragment}\n        show={isShowing}\n        enter=\"transform transition duration-[500ms]\"\n        enterFrom=\"opacity-0 rotate-[-120deg] scale-50\"\n        enterTo=\"opacity-100 rotate-0 scale-100\"\n        leave=\"transform duration-200 transition ease-in-out\"\n        leaveFrom=\"opacity-100 rotate-0 scale-100 \"\n        leaveTo=\"opacity-0 scale-95 \"\n      >\n        <div className=\"flex justify-between bg-gradient-to-r from-green-400 to-blue-500 mt-6 p-2 mx-auto rounded-xl shadow-md items-center space-x-4\">\n          <img\n            className=\"h-14 w-20\"\n            src=\"https://docs.near.org/img/near_logo.svg\"\n            alt=\"NEAR Logo\"\n          />\n\n          <div className=\"text-xl font-medium text-black uppercase\">\n            Voting is cool 😎\n          </div>\n          <div className=\"flex justify-between\">\n            {currentUser && (\n              <div className=\"mr-8\">\n                <p className=\"text-black-500\">\n                  Account ID: {currentUser.accountId}{\" \"}\n                </p>\n                <GodModeToggle\n                  contract={contract}\n                  currentUser={currentUser}\n                  nearConfig={nearConfig}\n                  wallet={wallet}\n                />\n              </div>\n            )}\n            {currentUser ? (\n              <button\n                className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right\"\n                onClick={signOut}\n              >\n                Log out\n              </button>\n            ) : (\n              <button\n                className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right\"\n                onClick={signIn}\n              >\n                Log in\n              </button>\n            )}\n          </div>\n        </div>\n      </Transition>\n    </>\n  );\n};\n\nexport default Authorization;\n","import \"regenerator-runtime/runtime\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Elections from \"./Elections\";\nimport Authorization from \"./Authorization\";\n\nconst App = ({ contract, currentUser, nearConfig, wallet }) => {\n  return (\n    <div className=\"container mx-auto\">\n      <Authorization\n        contract={contract}\n        currentUser={currentUser}\n        nearConfig={nearConfig}\n        wallet={wallet}\n      />\n      {currentUser && (\n        <Elections\n          contract={contract}\n          currentUser={currentUser}\n          nearConfig={nearConfig}\n          wallet={wallet}\n        />\n      )}\n    </div>\n  );\n};\n\nApp.propTypes = {\n  contract: PropTypes.shape({\n    get_elections: PropTypes.func.isRequired,\n    get_candidates: PropTypes.func.isRequired,\n    get_votes: PropTypes.func.isRequired,\n    get_god_mode: PropTypes.func.isRequired,\n    add_election: PropTypes.func.isRequired,\n    add_candidacy: PropTypes.func.isRequired,\n    add_vote: PropTypes.func.isRequired,\n    god_mode_on: PropTypes.func.isRequired,\n    god_mode_off: PropTypes.func.isRequired,\n  }).isRequired,\n  currentUser: PropTypes.shape({\n    accountId: PropTypes.string.isRequired,\n    balance: PropTypes.string.isRequired,\n  }),\n  nearConfig: PropTypes.shape({\n    contractName: PropTypes.string.isRequired,\n  }).isRequired,\n  wallet: PropTypes.shape({\n    requestSignIn: PropTypes.func.isRequired,\n    signOut: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default App;\n","// src/index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport getConfig from \"./config.js\";\nimport * as nearAPI from \"near-api-js\";\n\n// Initializing contract\nasync function initContract() {\n  const nearConfig = getConfig(process.env.NODE_ENV || \"testnet\");\n\n  // Initializing connection to the NEAR TestNet\n  const near = await nearAPI.connect({\n    deps: {\n      keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore(),\n    },\n    ...nearConfig,\n  });\n\n  // Needed to access wallet\n  const walletConnection = new nearAPI.WalletConnection(near);\n\n  // Load in account data\n  let currentUser;\n  if (walletConnection.getAccountId()) {\n    currentUser = {\n      accountId: walletConnection.getAccountId(),\n      balance: (await walletConnection.account().state()).amount,\n    };\n  }\n\n  // Initializing our contract APIs by contract name and configuration\n  const contract = await new nearAPI.Contract(\n    walletConnection.account(),\n    nearConfig.contractName,\n    {\n      // View methods are read-only – they don't modify the state, but usually return some value\n      viewMethods: [\n        \"get_elections\",\n        \"get_candidates\",\n        \"get_votes\",\n        \"get_god_mode\",\n      ],\n      // Change methods can modify the state, but you don't receive the returned value when called\n      changeMethods: [\n        \"add_election\",\n        \"add_candidacy\",\n        \"add_vote\",\n        \"god_mode_on\",\n        \"god_mode_off\",\n      ],\n      // Sender is the account ID to initialize transactions.\n      // getAccountId() will return empty string if user is still unauthorized\n      sender: walletConnection.getAccountId(),\n    }\n  );\n\n  return { contract, currentUser, nearConfig, walletConnection };\n}\n\nwindow.nearInitPromise = initContract().then(\n  ({ contract, currentUser, nearConfig, walletConnection }) => {\n    ReactDOM.render(\n      <App\n        contract={contract}\n        currentUser={currentUser}\n        nearConfig={nearConfig}\n        wallet={walletConnection}\n      />,\n      document.getElementById(\"root\")\n    );\n  }\n);\n","const CONTRACT_NAME =\n  process.env.CONTRACT_NAME || \"dev-1637962142021-34818082741173\";\n\nfunction getConfig(env) {\n  switch (env) {\n    case \"mainnet\":\n      return {\n        networkId: \"mainnet\",\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.near.org\",\n        helperUrl: \"https://helper.mainnet.near.org\",\n      };\n    // This is an example app so production is set to testnet.\n    // You can move production to mainnet if that is applicable.\n    case \"production\":\n    case \"development\":\n    case \"testnet\":\n      return {\n        networkId: \"testnet\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.testnet.near.org\",\n        helperUrl: \"https://helper.testnet.near.org\",\n      };\n    default:\n      throw Error(\n        `Unconfigured environment '${env}'. Can be configured in src/config.js.`\n      );\n  }\n}\n\nmodule.exports = getConfig;\n"],"sourceRoot":""}